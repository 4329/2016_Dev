// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef INTAKE_H
#define INTAKE_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../Configurable.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Intake_Config;

class Intake: public Subsystem , public Configurable {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> intakeTalon1;
	std::shared_ptr<CANTalon> pivotTalon;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	Intake_Config *myConfig;
	int home;
	bool homeSet;
public:
	Intake();
	virtual ~Intake();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	virtual void RetrieveConfig();
	virtual void Configure();
	virtual void SaveConfig();
	virtual void CreateConfig();

	void SetIntake(bool in);
	void StopIntake();

	void SetPivotHome();
	void SetPivotToHome();
	void SetPivotIntake();
	void SetPivotLow();

	void SetPivot(float value);
    float Limit(float num);
};

#endif
