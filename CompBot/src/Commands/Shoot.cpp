// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Shoot.h"
#include "../RobotMap.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

Shoot::Shoot(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
	Requires(Robot::shooter.get());
	theShotCmd.reset(new FireSequence());
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void Shoot::Initialize() {
}

// Called repeatedly when this Command is scheduled to run
void Shoot::Execute() {
	axisState = Robot::oi->getOperatorInterface()->Get_AxisState();
	if (axisState.RTrigger != 0)
	{
		obsCount--;
		if (obsCount == 0)
		{
			theShotCmd->Start();
			obsCount = axisState.AxisDelay;
		}
	} else
	{

	}
}

// Make this return true when this Command no longer needs to run execute()
bool Shoot::IsFinished() {
    return Robot::shooter->IsShooting();
}

// Called once after isFinished returns true
void Shoot::End() {
	theShotCmd->Cancel();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Shoot::Interrupted() {

}
