// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Scaler.h"
#include "../RobotMap.h"
#include "../Robot.h"


Scaler::Scaler() : Subsystem("Scaler"), Configurable("Scalar") {
	_scaler= RobotMap::scalerSolenoid;

	myCfg.reset(&(Robot::theConfig->_ScalarCfg));
	Configure();
}

void Scaler::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

Scaler::~Scaler()
{

}


void Scaler::RetrieveConfig()
{

}

void Scaler::Configure()
{

}

void Scaler::SaveConfig()
{
}

void Scaler::LiveConfigure()
{
	RetrieveConfig();
	Configure();
}

void Scaler::Extend()
{
	_scaler->Set(myCfg->ActiveIsExtended);
}

void Scaler::Retract()
{
	_scaler->Set(!myCfg->ActiveIsExtended);
}

bool Scaler::IsExtended()
{
	bool retval = _scaler->Get();

	if ((myCfg->ActiveIsExtended && retval) || (!myCfg->ActiveIsExtended && !retval))
	{
		return true;
	}
	return false;
}
