// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Shooter_Config.h"

#include "Shooter.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Shooter::Shooter() : Subsystem("Shooter") , Configurable("Shooter") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    shooterTalon1 = RobotMap::shooterTalon1;
    shooterTalon2 = RobotMap::shooterTalon2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    myConfig = new Shooter_Config;

	if (!ConfigExists()) CreateConfig();

    RetrieveConfig();
	Configure();

}

void Shooter::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

Shooter::~Shooter()
{
	delete myConfig;
}

void Shooter::RetrieveConfig()
{
	myConfig->Shooter_Speed1 = Preferences::GetInstance()->GetFloat("Shooter::Speed1",1.0);
	myConfig->Shooter_Speed2 = Preferences::GetInstance()->GetFloat("Shooter::Speed2",0.75);
	myConfig->Shooter_Speed3 = Preferences::GetInstance()->GetFloat("Shooter::Speed3",1.0);
	myConfig->Shooter_Speed4 = Preferences::GetInstance()->GetFloat("Shooter::Speed4",0.75);

	myConfig->Shooter_QuadEncoder_PulsesPerDegree = Preferences::GetInstance()->GetFloat("Shooter::QuadEncoder::PulsesPerDegree");

	myConfig->Shooter_shooterTalon1_Enabled = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Enabled",true);
	myConfig->Shooter_shooterTalon1_CANID = Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::CANID",1);
	myConfig->Shooter_shooterTalon1_Reversed = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Reversed",false);
	myConfig->Shooter_shooterTalon1_HasSensor = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::HasSensor",false);
	myConfig->Shooter_shooterTalon1_SensorReversed = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::SensorReversed",false);
	myConfig->Shooter_shooterTalon1_EnablePID = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::EnablePID",false);
	myConfig->Shooter_shooterTalon1_Profile_0_PID_P = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::P",1.0);
	myConfig->Shooter_shooterTalon1_Profile_0_PID_I = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::I",0.01);
	myConfig->Shooter_shooterTalon1_Profile_0_PID_D = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::D",0.0);
	myConfig->Shooter_shooterTalon1_Profile_0_PID_F = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::F",0.01);
	myConfig->Shooter_shooterTalon1_Profile_0_IZone = Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::Profile::0::IZone",256);
	myConfig->Shooter_shooterTalon1_Profile_0_EnableCLRampRate = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Profile::0::EnableCLRampRate",false);
	myConfig->Shooter_shooterTalon1_Profile_0_CLRampRate = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::CLRampRate",2500);
	myConfig->Shooter_shooterTalon1_Profile_1_PID_P = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::P",1.0);
	myConfig->Shooter_shooterTalon1_Profile_1_PID_I = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::I",0.01);
	myConfig->Shooter_shooterTalon1_Profile_1_PID_D = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::D",0);
	myConfig->Shooter_shooterTalon1_Profile_1_PID_F = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::F",0.01);
	myConfig->Shooter_shooterTalon1_Profile_1_IZone = Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::Profile::1::IZone",256);
	myConfig->Shooter_shooterTalon1_Profile_1_EnableCLRampRate = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Profile::1::EnableCLRampRate",false);
	myConfig->Shooter_shooterTalon1_Profile_1_CLRampRate = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::CLRampRate",2500);
	myConfig->Shooter_shooterTalon1_EnableVoltRampRate = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::EnableVoltRampRate",false);
	myConfig->Shooter_shooterTalon1_VoltRampRate = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::VoltRampRate",5.0);
	myConfig->Shooter_shooterTalon1_PID_CL_PM_Error = Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::PID::CL::PM::Error",10);
	myConfig->Shooter_shooterTalon1_QuadEncoder_PulsesPerInch = Preferences::GetInstance()->GetFloat("Shooter::shooterTalon1::QuadEncoder::PulsesPerInch",200.584198);
    myConfig->Shooter_shooterTalon1_Slaved = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Slaved",false);
    myConfig->Shooter_shooterTalon1_MasterCANID = Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::MasterCANID",0);


	myConfig->Shooter_shooterTalon2_Enabled = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Enabled",true);
	myConfig->Shooter_shooterTalon2_CANID = Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::CANID",2);
	myConfig->Shooter_shooterTalon2_Reversed = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Reversed",false);
	myConfig->Shooter_shooterTalon2_HasSensor = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::HasSensor",false);
	myConfig->Shooter_shooterTalon2_SensorReversed = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::SensorReversed",false);
	myConfig->Shooter_shooterTalon2_EnablePID = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::EnablePID",false);
	myConfig->Shooter_shooterTalon2_Profile_0_PID_P = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::P",1.0);
	myConfig->Shooter_shooterTalon2_Profile_0_PID_I = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::I",0.01);
	myConfig->Shooter_shooterTalon2_Profile_0_PID_D = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::D",0.0);
	myConfig->Shooter_shooterTalon2_Profile_0_PID_F = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::F",0.01);
	myConfig->Shooter_shooterTalon2_Profile_0_IZone = Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::Profile::0::IZone",256);
	myConfig->Shooter_shooterTalon2_Profile_0_EnableCLRampRate = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Profile::0::EnableCLRampRate",false);
	myConfig->Shooter_shooterTalon2_Profile_0_CLRampRate = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::CLRampRate",2500);
	myConfig->Shooter_shooterTalon2_Profile_1_PID_P = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::P",1.0);
	myConfig->Shooter_shooterTalon2_Profile_1_PID_I = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::I",0.01);
	myConfig->Shooter_shooterTalon2_Profile_1_PID_D = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::D",0);
	myConfig->Shooter_shooterTalon2_Profile_1_PID_F = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::F",0.01);
	myConfig->Shooter_shooterTalon2_Profile_1_IZone = Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::Profile::1::IZone",256);
	myConfig->Shooter_shooterTalon2_Profile_1_EnableCLRampRate = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Profile::1::EnableCLRampRate",false);
	myConfig->Shooter_shooterTalon2_Profile_1_CLRampRate = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::CLRampRate",2500);
	myConfig->Shooter_shooterTalon2_EnableVoltRampRate = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::EnableVoltRampRate",false);
	myConfig->Shooter_shooterTalon2_VoltRampRate = Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::VoltRampRate",5.0);
	myConfig->Shooter_shooterTalon2_PID_CL_PM_Error = Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::PID::CL::PM::Error",10);
	myConfig->Shooter_shooterTalon2_QuadEncoder_PulsesPerInch = Preferences::GetInstance()->GetFloat("Shooter::shooterTalon2::QuadEncoder::PulsesPerInch",200.584198);
    myConfig->Shooter_shooterTalon2_Slaved = Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Slaved",false);
    myConfig->Shooter_shooterTalon2_MasterCANID = Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::MasterCANID",0);

}

void Shooter::Configure()
{

}

void Shooter::SaveConfig()
{
	Preferences::GetInstance()->PutFloat("Shooter::Speed1",myConfig->Shooter_Speed1);
	Preferences::GetInstance()->PutFloat("Shooter::Speed2",myConfig->Shooter_Speed2);
	Preferences::GetInstance()->PutFloat("Shooter::Speed3",myConfig->Shooter_Speed3);
	Preferences::GetInstance()->PutFloat("Shooter::Speed4",myConfig->Shooter_Speed4);
	Preferences::GetInstance()->PutFloat("Shooter::QuadEncoder::PulsesPerDegree",myConfig->Shooter_QuadEncoder_PulsesPerDegree);

	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::Enabled",myConfig->Shooter_shooterTalon1_Enabled);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon1::CANID",myConfig->Shooter_shooterTalon1_CANID);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::Reversed",myConfig->Shooter_shooterTalon1_Reversed);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::HasSensor",myConfig->Shooter_shooterTalon1_HasSensor);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::SensorReversed",myConfig->Shooter_shooterTalon1_SensorReversed);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::EnablePID",myConfig->Shooter_shooterTalon1_EnablePID);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::0::PID::P",myConfig->Shooter_shooterTalon1_Profile_0_PID_P);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::0::PID::I",myConfig->Shooter_shooterTalon1_Profile_0_PID_I);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::0::PID::D",myConfig->Shooter_shooterTalon1_Profile_0_PID_D);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::0::PID::F",myConfig->Shooter_shooterTalon1_Profile_0_PID_F);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon1::Profile::0::IZone",myConfig->Shooter_shooterTalon1_Profile_0_IZone);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::Profile::0::EnableCLRampRate",myConfig->Shooter_shooterTalon1_Profile_0_EnableCLRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::0::CLRampRate",myConfig->Shooter_shooterTalon1_Profile_0_CLRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::1::PID::P",myConfig->Shooter_shooterTalon1_Profile_1_PID_P);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::1::PID::I",myConfig->Shooter_shooterTalon1_Profile_1_PID_I);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::1::PID::D",myConfig->Shooter_shooterTalon1_Profile_1_PID_D);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::1::PID::F",myConfig->Shooter_shooterTalon1_Profile_1_PID_F);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon1::Profile::1::IZone",myConfig->Shooter_shooterTalon1_Profile_1_IZone);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::Profile::1::EnableCLRampRate",myConfig->Shooter_shooterTalon1_Profile_1_EnableCLRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::Profile::1::CLRampRate",myConfig->Shooter_shooterTalon1_Profile_1_CLRampRate);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::EnableVoltRampRate",myConfig->Shooter_shooterTalon1_EnableVoltRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon1::VoltRampRate",myConfig->Shooter_shooterTalon1_VoltRampRate);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon1::PID::CL::PM::Error",myConfig->Shooter_shooterTalon1_PID_CL_PM_Error);
	Preferences::GetInstance()->PutFloat("Shooter::shooterTalon1::QuadEncoder::PulsesPerInch",myConfig->Shooter_shooterTalon1_QuadEncoder_PulsesPerInch);
    Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon1::Slaved",myConfig->Shooter_shooterTalon1_Slaved);
    Preferences::GetInstance()->PutInt("Shooter::shooterTalon1::MasterCANID",myConfig->Shooter_shooterTalon1_MasterCANID);

	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::Enabled",myConfig->Shooter_shooterTalon2_Enabled);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon2::CANID",myConfig->Shooter_shooterTalon2_CANID);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::Reversed",myConfig->Shooter_shooterTalon2_Reversed);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::HasSensor",myConfig->Shooter_shooterTalon2_HasSensor);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::SensorReversed",myConfig->Shooter_shooterTalon2_SensorReversed);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::EnablePID",myConfig->Shooter_shooterTalon2_EnablePID);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::0::PID::P",myConfig->Shooter_shooterTalon2_Profile_0_PID_P);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::0::PID::I",myConfig->Shooter_shooterTalon2_Profile_0_PID_I);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::0::PID::D",myConfig->Shooter_shooterTalon2_Profile_0_PID_D);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::0::PID::F",myConfig->Shooter_shooterTalon2_Profile_0_PID_F);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon2::Profile::0::IZone",myConfig->Shooter_shooterTalon2_Profile_0_IZone);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::Profile::0::EnableCLRampRate",myConfig->Shooter_shooterTalon2_Profile_0_EnableCLRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::0::CLRampRate",myConfig->Shooter_shooterTalon2_Profile_0_CLRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::1::PID::P",myConfig->Shooter_shooterTalon2_Profile_1_PID_P);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::1::PID::I",myConfig->Shooter_shooterTalon2_Profile_1_PID_I);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::1::PID::D",myConfig->Shooter_shooterTalon2_Profile_1_PID_D);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::1::PID::F",myConfig->Shooter_shooterTalon2_Profile_1_PID_F);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon2::Profile::1::IZone",myConfig->Shooter_shooterTalon2_Profile_1_IZone);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::Profile::1::EnableCLRampRate",myConfig->Shooter_shooterTalon2_Profile_1_EnableCLRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::Profile::1::CLRampRate",myConfig->Shooter_shooterTalon2_Profile_1_CLRampRate);
	Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::EnableVoltRampRate",myConfig->Shooter_shooterTalon2_EnableVoltRampRate);
	Preferences::GetInstance()->PutDouble("Shooter::shooterTalon2::VoltRampRate",myConfig->Shooter_shooterTalon2_VoltRampRate);
	Preferences::GetInstance()->PutInt("Shooter::shooterTalon2::PID::CL::PM::Error",myConfig->Shooter_shooterTalon2_PID_CL_PM_Error);
	Preferences::GetInstance()->PutFloat("Shooter::shooterTalon2::QuadEncoder::PulsesPerInch",myConfig->Shooter_shooterTalon2_QuadEncoder_PulsesPerInch);
    Preferences::GetInstance()->PutBoolean("Shooter::shooterTalon2::Slaved",myConfig->Shooter_shooterTalon2_Slaved);
    Preferences::GetInstance()->PutInt("Shooter::shooterTalon2::MasterCANID",myConfig->Shooter_shooterTalon2_MasterCANID);

}

void Shooter::CreateConfig()
{
    Preferences::GetInstance()->GetFloat("Shooter::Speed1",1.0);
	Preferences::GetInstance()->GetFloat("Shooter::Speed2",0.75);
    Preferences::GetInstance()->GetFloat("Shooter::Speed3",1.0);
	Preferences::GetInstance()->GetFloat("Shooter::Speed4",0.75);
	Preferences::GetInstance()->GetFloat("Shooter::QuadEncoder::PulsesPerDegree");

	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Enabled",true);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::CANID",8);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Reversed",false);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::HasSensor",false);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::SensorReversed",false);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::EnablePID",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::P",1.0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::I",0.01);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::D",0.0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::PID::F",0.01);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::Profile::0::IZone",256);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Profile::0::EnableCLRampRate",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::0::CLRampRate",2500);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::P",1.0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::I",0.01);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::D",0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::PID::F",0.01);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::Profile::1::IZone",256);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Profile::1::EnableCLRampRate",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::Profile::1::CLRampRate",2500);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::EnableVoltRampRate",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon1::VoltRampRate",5.0);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::PID::CL::PM::Error",10);
	Preferences::GetInstance()->GetFloat("Shooter::shooterTalon1::QuadEncoder::PulsesPerInch",200.584198);
    Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon1::Slaved",false);
    Preferences::GetInstance()->GetInt("Shooter::shooterTalon1::MasterCANID",0);


	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Enabled",true);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::CANID",9);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Reversed",false);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::HasSensor",false);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::SensorReversed",false);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::EnablePID",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::P",1.0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::I",0.01);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::D",0.0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::PID::F",0.01);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::Profile::0::IZone",256);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Profile::0::EnableCLRampRate",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::0::CLRampRate",2500);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::P",1.0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::I",0.01);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::D",0);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::PID::F",0.01);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::Profile::1::IZone",256);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Profile::1::EnableCLRampRate",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::Profile::1::CLRampRate",2500);
	Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::EnableVoltRampRate",false);
	Preferences::GetInstance()->GetDouble("Shooter::shooterTalon2::VoltRampRate",5.0);
	Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::PID::CL::PM::Error",10);
	Preferences::GetInstance()->GetFloat("Shooter::shooterTalon2::QuadEncoder::PulsesPerInch",200.584198);
    Preferences::GetInstance()->GetBoolean("Shooter::shooterTalon2::Slaved",false);
    Preferences::GetInstance()->GetInt("Shooter::shooterTalon2::MasterCANID",0);
}
