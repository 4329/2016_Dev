// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVETRAIN_H
#define DRIVETRAIN_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../Configurable.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class DriveTrain: public Subsystem, public Configurable {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> rightTalon2;
	std::shared_ptr<CANTalon> rightTalon1;
	std::shared_ptr<CANTalon> leftTalon2;
	std::shared_ptr<CANTalon> leftTalon1;
	std::shared_ptr<RobotDrive> robotDrive;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	DriveTrain_Config *myConfig;


	float  leftMotorOutput;
	float  rightMotorOutput;
	bool   positioning;
	double ldistance;
	double rdistance;
	double rZeroPoint;
	double lZeroPoint;
	double rLastPosDelta;
	double lLastPosDelta;
	bool   hasMoved;

public:
	DriveTrain();
	virtual ~DriveTrain();
	virtual void RetrieveConfig();
	virtual void Configure();

	void InitDefaultCommand();

	void SetDrive_Arcade(float x, float y, bool highRate = false);

    bool AtCommandedPosition();
    void Stop();
    void Zero_Encoders();
	void Set_PositionMode();
	void Set_VoltageMode();
	float Limit(float num);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
