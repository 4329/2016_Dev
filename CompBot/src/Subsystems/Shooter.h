// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef SHOOTER_H
#define SHOOTER_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../Configurable.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Shooter_Config;

class Shooter: public Subsystem , public Configurable {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	std::shared_ptr<CANTalon> TopTalon;
	std::shared_ptr<CANTalon> BottomTalon;
	Shooter_Config *myConfig;
	float tgtRPM;
	bool isShooting;

public:
	Shooter();
	virtual ~Shooter();
	void InitDefaultCommand();

	virtual void RetrieveConfig();
	virtual void Configure();
	virtual void SaveConfig();
	virtual void CreateConfig();

	void Fire(float value);
	int  Fire1();
	int  Fire2();
	void Stop();
	bool AtRPM();
	bool IsShooting();
};

#endif
